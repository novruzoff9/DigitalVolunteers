@using EntityLayer.Concrete
@model List<DailyLogin>
@{
    ViewBag.Title = "DailyLogins";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<link href="~/Style/AdminPanel/DailyLogins123.css" rel="stylesheet" />

<link href="~/Style/AdminPanel/APUserList1231.css" rel="stylesheet" />
<style>
    aside ul #dailylogins {
        border-radius: 8px;
        background-color: #006bce;
    }

        aside ul #dailylogins p, aside ul #dailylogins i {
            color: white;
        }

        aside ul #dailylogins:hover {
            padding-left: 0;
        }

            aside ul #dailylogins:hover p, aside ul #dailylogins:hover i {
                color: white;
            }

    select {
        padding: 6px 10px;
        border-radius: 8px;
        border: 2px solid #87898f;
        outline: none;
    }

        select:focus {
            border: 2px solid #0162e8;
        }
</style>

<div class="for-ranges">
    <section>
        <p class="value">@ViewBag.daily</p>
        <p class="range">Gündəlik giriş sayı</p>
        <p class="date">@ViewBag.today</p>
    </section>
    <section>
        <p class="value">@ViewBag.weekly</p>
        <p class="range">Həftəlik giriş sayı</p>
        <p class="date">@ViewBag.thisweek-dən</p>
    </section>
    <section>
        <p class="value">@ViewBag.monthly</p>
        <p class="range">Aylıq giriş sayı</p>
        <p class="date">@ViewBag.ThisMonth ayı</p>
    </section>
</div>
<div id="daily_logins"></div>

<div class="logins">
    <section id="filter" class="flex-row justify-content-around">
        @{
            string date = ViewBag.date;
            string membertype = ViewBag.membertype;
        }
        <input id="dateoflogins" type="date" value="@date">
        <select id="membertype" name="membertype">
            @if (membertype == "All")
            {
                <option selected value="All">Hər kəs</option>
            }
            else
            {
                <option value="All">Hər kəs</option>
            }
            @if (membertype == "Staff")
            {
                <option selected value="Staff">Heyət üzvləri</option>
            }
            else
            {
                <option value="Staff">Heyət üzvləri</option>
            }
            @if (membertype == "Member")
            {
                <option selected value="Member">Üzvlər</option>
            }
            else
            {
                <option value="Member">Üzvlər</option>
            }

        </select>
        <button id="find" class="action-button primary">Axtar</button>
    </section>
    <section id="list">
        @foreach (var item in Model)
        {
            string faculty = "";
            if (item.User.Faculty == "Digital Economy") { faculty = "Rəqəmsal İqtisadiyyat fakültəsi"; }
            else if (item.User.Faculty == "Russian Economy") { faculty = "Rus İqtisad Məktəbi"; }
            else if (item.User.Faculty == "Business") { faculty = "Biznes və Menecement"; }
            else if (item.User.Faculty == "Sabah") { faculty = "SABAH mərkəzi"; }
            else if (item.User.Faculty == "ISE") { faculty = "Beynəlxalq İqtisadiyyat Məktəbi"; }
            else if (item.User.Faculty == "Design") { faculty = "UNEC Dizayn Məktəbi"; }
            else if (item.User.Faculty == "Finance") { faculty = "Maliyyə və Mühasibat fəkültəsi"; }
            else if (item.User.Faculty == "TUDIFAK") { faculty = "Türk Dünyası İqtisad fəkültəsi"; }
            else if (item.User.Faculty == "Engineering") { faculty = "Mühəndislik fakültəsi"; }
            else if (item.User.Faculty == "Economy") { faculty = "İqtisadiyyat və İdarəetmə fakültəsi"; }

            <div class="user">
                <div class="main-datas">
                    <p class="user-id">@item.UserID</p>
                    <img src="@item.User.UserImage" alt="">
                    <p class="user-name">@item.User.Name @item.User.Surname</p>
                </div>
                <p class="userlogin">@item.User.UserName</p>
                <p class="user-faculty" style="text-align:center">@faculty</p>
                <p class="activatepoint">@item.User.ActivityPoint</p>
                <div class="actions" data-userid="@item.User.UserID">
                    <i class="fas fa-info" onclick="ShowUserDetails(@item.UserID)"></i>
                </div>
            </div>
        }
    </section>
</div>

<div class="pop-up">
    <section id="userdetails">
        <div class="data-column">
            <img data-detail="image" src="~/Images/ProfilePictures/1_Yagmur_Novruzlu.jpg" alt="">
        </div>
        <div class="data-column">
            <div class="data-value">
                <p class="data">İstifadəçi</p>
                <p data-detail="name" class="value">Yağmur Novruzlu</p>
            </div>

            <div class="data-value">
                <p class="data">İstifadəçi adı</p>
                <p data-detail="username" class="value username">novruzoff</p>
            </div>

            <div class="data-value">
                <p class="data">Fakültə</p>
                <p data-detail="faculty" class="value">Rəqəmsal İqtisadiyyat</p>
            </div>

            <div class="data-value">
                <p class="data">İxtisas</p>
                <p data-detail="profession" class="value">İnformasiya Texnologiyaları</p>
            </div>
        </div>

        <div class="data-column">
            <div class="data-value">
                <p class="data">Departament</p>
                <p data-detail="department" class="value">İT</p>
            </div>

            <div class="data-value">
                <p class="data">Vəzifəsi</p>
                <p data-detail="role" class="value">Rəhbər</p>
            </div>

            <div class="data-value">
                <p class="data">Qrup nömrəsi</p>
                <p data-detail="group" class="value">570-1</p>
            </div>

            <div class="data-value">
                <p class="data">Kurs</p>
                <p data-detail="course" class="value">2</p>
            </div>

        </div>

        <div class="data-column">
            <div class="data-value">
                <p class="data">Telefon</p>
                <p data-detail="phone" class="value">070-310-80-88</p>
            </div>

            <div class="data-value">
                <p class="data">E-mail</p>
                <p data-detail="mail" class="value">yagmrnov2@gmail.com</p>
            </div>

            <div class="data-value">
                <p class="data">Aktivlik balı</p>
                <p data-detail="activity" class="value">0</p>
            </div>

            <div class="data-value">
                <p class="data">Doğum tarixi</p>
                <p data-detail="signdate" class="value">19 sentyabr 2023</p>
            </div>
        </div>

        <div class="data-column close">
            <i class="fas fa-times"></i>
            <button id="update-user-btn" data-userid="" class="action-button primary">Düzəliş et</button>
        </div>
    </section>
</div>

<script>
    $("#find").click(function () {
        var value = $("#dateoflogins").val();
        var date = value;
        var membertype = $("#membertype").val();
        var url = '@Url.Action("DailyLogins", "Admin")' + '?date=' + date + '&membertype=' + membertype;

        window.location.href = url;
    });

    if (screen.width < 600) {
        $("#filter").toggleClass("flex-row", "flex-column");
        $("#filter input").css("margin-bottom", "8px");
        $("#filter select").css("margin-bottom", "8px");
    }

</script>

<script>
    $("#userdetails").parent().css("display", "none");
    var height = $(window).height();
    $(".pop-up").height(height);

    $("#userdetails .data-column").height($(".data-column").parent().height());
    $(".close i").click(function () {
        $("#userdetails").parent().css("display", "none");
        $('#scrollToTop').fadeOut();
        $('body').css('overflow', 'auto');
    });
    function ShowUserDetails(id) {
        $('html, body').animate({ scrollTop: 0 }, 800);
        $('#scrollToTop').fadeIn();
        // Hide scrollbar
        $('body').css('overflow', 'hidden');
        userid = id;
        $("#userdetails .data-column").height("380px");
        $.ajax({
            type: "GET",
            url: "/Admin/UserByID/" + userid,
            success: function (result) {
                showUserData(result);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(xhr.status);
            }
        });

        function showUserData(user) {
            $("#userdetails").parent().css("display", "flex");

            $("img[data-detail='image']").attr("src", user.UserImage);
            $("p[data-detail='name']").text(user.Name + " " + user.Surname);
            $("p[data-detail='username']").text(user.UserName);

            if (user.Faculty == "Digital Economy") { user.Faculty = "Rəqəmsal İqtisadiyyat fakültəsi"; }
            else if (user.Faculty == "Russian Economy") { user.Faculty = "Rus İqtisad Məktəbi"; }
            else if (user.Faculty == "Business") { user.Faculty = "Biznes və Menecement"; }
            else if (user.Faculty == "Sabah") { user.Faculty = "SABAH mərkəzi"; }
            else if (user.Faculty == "ISE") { user.Faculty = "Beynəlxalq İqtisadiyyat Məktəbi"; }
            else if (user.Faculty == "Design") { user.Faculty = "UNEC Dizayn Məktəbi"; }
            else if (user.Faculty == "Finance") { user.Faculty = "Maliyyə və Mühasibat fəkültəsi"; }
            else if (user.Faculty == "TUDIFAK") { user.Faculty = "Türk Dünyası İqtisad fəkültəsi"; }
            else if (user.Faculty == "Engineering") { user.Faculty = "Mühəndislik fakültəsi"; }
            else if (user.Faculty == "Economy") { user.Faculty = "İqtisadiyyat və İdarəetmə fakültəsi"; }
            else if (user.Faculty == "QETM") { user.Faculty = "Qiyabi və Əlavə Təhsil Mərkəzi"; }

            $("p[data-detail='faculty']").text(user.Faculty);
            $("p[data-detail='group']").text(user.Group);
            $("p[data-detail='profession']").text(user.Profession);
            var entrance = user.EntranceYear;
            year = new Date().getFullYear();
            month = new Date().getMonth() + 1;
            course = year - entrance;
            if (month >= 9) { course += 1; }
            $("p[data-detail='course']").text(course);

            let department = "";
            if (user.Department == "Secretary") { department = "Katib"; }
            else if (user.Department == "IT") { department = "İnformasiya Texnologiyaları departamenti"; }
            else if (user.Department == "SMM") { department = "Sosial Media Marketinq departamenti"; }
            else if (user.Department == "HR") { department = "İnsan Resursları departamenti"; }
            else if (user.Department == "PR") { department = "İctimaiyyətlə Əlaqələr departamenti"; }
            else if (user.Department == "WWM") { department = "Üzvlərlə iş"; }
            else if (user.Department == "WWF") { department = "Fakültələrlə iş"; }
            else if (user.Department == "FS") { department = "Fakültə heyəti"; }
            else if (user.Department == "ICD") { department = "Beynəlxalq əməkdaşlıq departamenti"; }
            else if (user.Department == "Organizer") { department = "Təşkilati işlər departamenti"; }
            else if (user.Department == "Security") { department = "Nəzarət və təftiş"; }
            else if (user.Department == "Management") { department = "İdarə"; }
            $("p[data-detail='department']").text(department);


            let modelRole = user.Role;
            let role = "";
            if (modelRole == "President") { role = "Təşkilat üzrə Sədr"; }
            else if (modelRole == "Vice-President") { role = "Təşkilat üzrə Sədr müavini"; }
            else if (modelRole == "Leader") { role = "Rəhbər"; }
            else if (modelRole == "Chairman") { role = "Fakültə üzrə Sədr"; }
            else if (modelRole == "Vice-Chairman") { role = "Rəhbər müavini"; }
            else if (modelRole == "Staff") { role = "Heyət üzvü"; }
            else if (modelRole == "Leader") { role = "Departament üzrə Rəhbər"; }
            else if (modelRole == "Vice-Chairman") { role = "Fakültə üzrə Sədr müavini"; }
            else if (modelRole == "Vice-Leader") { role = "Departament üzrə Rəhbər müavini"; }
            else if (modelRole == "HR") { role = "İnsan Resursları"; }
            else if (modelRole == "PR") { role = "İctimaiyyətlə əlaqələr"; }
            else if (modelRole == "IT") { role = "İnformasiya Texnologiyaları"; }
            else if (modelRole == "SMM") { role = "SMM"; }
            else if (modelRole == "PM") { role = "Layihə Meneceri"; }
            else if (modelRole == "CW") { role = "Copywriter"; }
            else if (modelRole == "WWM") { role = "Üzvlərlə iş"; }
            else if (modelRole == "Photograph") { role = "Fotoqraf"; }
            else if (modelRole == "Photograph/Videograph") { role = "Fotoqraf/Videoqraf"; }
            else if (modelRole == "Coordinator") { role = "Koordinator"; }
            else if (modelRole == "Security") { role = "Nəzarət və Təftiş"; }
            else if (modelRole == "GDesigner") { role = "Qrafik dizayner"; }
            else if (modelRole == "Secretary") { role = "Katib"; }
            else if (modelRole == "Advisor") { role = "Müşavir"; }

            $("p[data-detail='role']").text(role);
            $("p[data-detail='activity']").text(user.ActivityPoint);
            $("p[data-detail='phone']").text("+994" + user.PhoneNumber);
            $("p[data-detail='mail']").text(user.EMail);
            $("p[data-detail='signdate']").text(user.Password);
            $("#update-user-btn").attr("data-userid", user.UserID);
        }
    }
</script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>



<script type="text/javascript">

    $(document).ready(function () {
        $.ajax({
            type: "Get",
            url: "/Admin/DailyLoginChart",
            success: function (logins) {
                google.charts.load('current',
                    { 'packages': ['corechart'] });
                google.charts.setOnLoadCallback(function () {
                    drawChart(logins);
                });
            }
        });
    });

    function drawChart(items) {

        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Gün');
        data.addColumn('number', 'Üzv');
        data.addColumn('number', 'Heyət');

        var dataArray = [];
        $.each(items, function (i, obj) {
            dataArray.push([obj.Name, obj.NowValue, obj.PreviusValue]);
        });
        data.addRows(dataArray);

        var options = {
            title: 'Üzvlərin və idarə heyətinin gündəlik girişi',
            titleTextStyle: {
                fontSize: 22
            },
            chartArea: {
                top: 70,
                width: '90%',
                height: '70%'
            },
            backgroundColor: {
                fill: "#006bce"
            },
            height: 500,
            legend: { position: 'bottom' },
            hAxis: { title: 'Tarix', titleTextStyle: { color: '#333' } },
            vAxis: { minValue: 0 }
        };

        var chart = new google.visualization.AreaChart(document.getElementById('daily_logins'));

        options.hAxis = {
            textStyle: {
                fontSize: 16,
                color: '#080708',
            }
        }
        options.vAxis = {
            textStyle: {
                fontSize: 16,
                color: '#080708',
            }
        }
        options.legend.textStyle = {
            color: "#080708"
        }
        options.backgroundColor = "#fff";
        options.titleTextStyle.color = "#080708";


        $(document).ready(function () {
            chart.draw(data, options);
        });

        $(".themebtn").click(function () {
            if ($(this).hasClass("fa-sun")) {
                options.hAxis = {
                    textStyle: {
                        color: '#080708',
                    }
                }
                options.vAxis = {
                    textStyle: {
                        color: '#080708',
                    }
                }
                options.legend.textStyle = {
                    color: "#080708"
                }
                options.backgroundColor = "#fff";
                options.titleTextStyle.color = "#080708";
                chart.draw(data, options);
            }
            else {
                options.hAxis = {
                    textStyle: {
                        color: '#fff',
                    }
                }
                options.vAxis = {
                    textStyle: {
                        color: '#fff',
                    }
                }
                options.legend.textStyle = {
                    color: "#fff"
                }
                options.backgroundColor = "#141824";
                options.titleTextStyle.color = "#fff";
                chart.draw(data, options);
            }
        });
    }
</script>